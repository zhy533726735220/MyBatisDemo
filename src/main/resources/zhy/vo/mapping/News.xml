<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--在每一个配置文件之中实际上都需要有一个独立的命名空间(名字，日后引用就需要此名称)-->
<!--考虑到后续要进行相关的日志的配置操作，所以对于这个资源文件都建议设置一个包名称-->
<!--命名空间(Name Space)，所以习惯"包名称+VO名称+NS"-->
<!--<mapper namespace="vo.mapping.MemberNS">-->
<mapper namespace="zhy.vo.mapping.NewsNS">

	<!--在News中开启了二级缓存-->
	<cache eviction="LRU" flushInterval="10000" readOnly="true" size="1024"/>

	<resultMap id="NewsMap" type="News">
		<id column="nid" property="nid"></id>
		<result column="title" property="title"/>
		<result column="pub_date" property="pubdate"/>
	</resultMap>

	<!-- 定义要进行数据追加操作的SQL语句，每一个SQL都需要有一个自己独立的ID，这个ID为程序引用 -->
	<insert id="doCreate" parameterType="News" keyProperty="nid" useGeneratedKeys="true">
	INSERT INTO news(title, pub_date) VALUE (#{title}, #{pubdate});
	</insert>
<!--UPDATE news SET title=#{title} WHERE nid=#{nid}-->
	<update id="doUpdate" parameterType="News">
	 UPDATE news
		 <set>
			 title = #{title},
			 <if test="pubdate != null">
				 pub_date = #{pubdate},
			 </if>
		 </set>
		<where>
			<if test="nid !=null">
				nid = #{nid}
			</if>
		</where>


	</update>

	<delete id="doRemove" parameterType="java.lang.Integer">
		DELETE FROM news WHERE nid=#{nid}
	</delete>

	<select id="findById" parameterType="java.lang.Integer" resultType="News">
		SELECT nid, title, pub_date AS pubdate FROM news WHERE nid=#{nid}
	</select>

	<select id="findAll" resultMap="NewsMap">
		SELECT nid, title, pub_date FROM news
	</select>

	<select id="findAllSplit" parameterType="java.util.Map" resultMap="NewsMap" useCache="false">
		SELECT nid, title, pub_date FROM news
		<if test="column != null">
			WHERE ${column} LIKE #{keyWord}
		</if>
		LIMIT #{start}, #{lineSize}
	</select>

	<select id="getAllCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM news WHERE ${column} LIKE #{keyWord}
	</select>

	<!--<select id="findAllByTitle" parameterType="News" resultMap="NewsMap">-->
		<!--SELECT nid,title,pub_date FROM news-->
		<!--<if test="title !=null">-->
			<!--WHERE title = #{title}-->
		<!--</if>-->
	<!--</select> -->

	<select id="findAllByTitle" parameterType="News" resultMap="NewsMap">
		SELECT nid,title,pub_date FROM news
		<where>
			<choose>
				<when test="nid != null and title != null">
					nid=#{nid} AND title=#{title}
				</when>
				<when test="nid != null">
					nid=#{nid}
				</when>
				<when test="title != null">
					title=#{title}
				</when>
			</choose>
		</where>
	</select>

	<delete id="doRemoveBatch" parameterType="Integer" >
		DELETE FROM news
		<where>
			nid IN
			<foreach collection="array" open="(" close=")" separator="," item="ele">
				#{ele}
			</foreach>
		</where>
	</delete>

</mapper>